// PAND gate / ID: ${id} / Galileo name: "${name}"
module PAND_${id}     // NOTE: an n-ary PAND is cascaded into n-1 binary PANDs
//
  f0_${id}: bool init false;
  f1_${id}: bool init false;
  st_${id}: [0..4] init 0;  // 0:"up", 1:"inform fail", 2:"failed", 3:"inform up", 4:"unbreakable"

  // Did time pass? This joker-action catches the expiration of any clock
  [_?] st_${id}==0 & f1_${id} & !f0_${id} -> (st_${id}'=4);

  [f_${firstChildId}??] st_${id}==0 & !f0_${id} & !f1_${id}-> (f0_${id}'=true);
  [f_${firstChildId}??] st_${id}==0 & !f0_${id} & f1_${id} -> (st_${id}'=1) & (f0_${id}'=true);
  [f_${firstChildId}??] st_${id}!=0 & !f0_${id} -> (f0_${id}'=true);

  [f_${secondChildId}??] st_${id}==0 & !f0_${id} & !f1_${id} -> (f1_${id}'=true);
  [f_${secondChildId}??] st_${id}==0 & f0_${id} & !f1_${id} -> (st_${id}'=1) & (f1_${id}'=true);
  [f_${secondChildId}??] st_${id}==3 & !f1_${id} -> (st_${id}'=2) & (f1_${id}'=true);
  [f_${secondChildId}??] (st_${id}==1|st_${id}==2|st_${id}==4) & !f1_${id} -> (f1_${id}'=true);

  [u_${firstChildId}??] st_${id}!=1 & f0_${id} -> (f0_${id}'=false);
  [u_${firstChildId}??] st_${id}==1 & f0_${id} -> (st_${id}'=0) & (f0_${id}'=false);

  [u_${secondChildId}??] (st_${id}==0|st_${id}==3) & f1_${id} -> (f1_${id}'=false);
  [u_${secondChildId}??] (st_${id}==1|st_${id}==4) & f1_${id} -> (st_${id}'=0) & (f1_${id}'=false);
  [u_${secondChildId}??] st_${id}==2 & f1_${id} -> (st_${id}'=3) & (f1_${id}'=false);

  [f_${id}!!] st_${id}==1 -> (st_${id}'=2);
  [u_${id}!!] st_${id}==3 -> (st_${id}'=0);
//
endmodule

